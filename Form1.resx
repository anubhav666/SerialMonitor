<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serialPort.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="serialTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>134, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Tv9bW1v/SkpK/EdHR29HR0e1R0dH4kdHR+JHR0e6R0dHFUdHRwAAAAAAAAAAAAAAAAAAAAAAR0dHAEdH
        Rx9HR0fgUVFR/1FRUf9HR0fcRkZGeVBQUPyIiIj/YGBg/21tbf+2trb/tLS0/5ycnP+EhIT/goKC/4KC
        gv9cXFz/Tk5O/1tbW/9KSkr8R0dHeUdHR9xRUVH/UVFR/0dHR+BHR0cfR0dHAAAAAAAAAAAAAAAAAAAA
        AABHR0cAR0dHH0dHR+BWVlb/VlZW/0dHR9xGRkZ5UFBQ/IiIiP9gYGD/bW1t/7W1tf+2trb/tbW1/5yc
        nP+EhIT/goKC/1xcXP9OTk7/W1tb/0pKSvxHR0d5R0dH3FZWVv9WVlb/R0dH4EdHRx9HR0cAAAAAAAAA
        AAAAAAAAAAAAAEdHRwBHR0cfSEhI4GFhYf9YWFj/R0dH3EZGRnlQUFD8iIiI/2BgYP9oaGj/qKio/6io
        qP+oqKj/p6en/4+Pj/97e3v/WVlZ/05OTv9bW1v/SkpK/EdHR3lISEjcYWFh/1hYWP9HR0fgR0dHH0dH
        RwAAAAAAAAAAAAAAAAAAAAAAR0dHAEdHRx9ISEjgdnZ2/21tbf9HR0fcRkZGeVBQUPyIiIj/ZGRk/0tL
        S/9VVVX/VVVV/1VVVf9VVVX/U1NT/05OTv9JSUn/UFBQ/1tbW/9KSkr8R0dHeUhISNx2dnb/bW1t/0dH
        R+BHR0cfR0dHAAAAAAAAAAAAAAAAAAAAAABHR0cAR0dHH0dHR+B5eXn/eXl5/0dHR9xGRkZ5UFBQ/ImJ
        if+Ghob/eHh4/3d3d/93d3f/d3d3/3d3d/93d3f/eHh4/21tbf9dXV3/W1tb/0pKSvxHR0d5R0dH3Hl5
        ef95eXn/R0dH4EdHRx9HR0cAAAAAAAAAAAAAAAAAR0dHAEdHRwBHR0c/R0dH62ZmZv9mZmb/RkZG6EVF
        RahMTEz9cHBw/3d3d/93d3f/d3d3/3d3d/94eHj/eHh4/3h4eP94eHj/dnZ2/2BgYP9TU1P/SUlJ/UdH
        R6hHR0foZmZm/2ZmZv9HR0frR0dHP0dHRwBHR0cAAAAAAAAAAABHR0cAR0dHAEdHR51MTEz/VVVV/1VV
        Vf9UVFT/VFRU/lRUVP9VVVX/VVVV/1VVVf9VVVX/U1NT/05OTv9OTk7/Tk5O/05OTv9OTk7/T09P/05O
        Tv9OTk7/Tk5O/k5OTv9OTk7/Tk5O/0lJSf9HR0edR0dHAEdHRwAAAAAAAAAAAEdHRwBHR0cBREREpWlp
        af+oqKj/qKio/6ioqP+oqKj/qKio/6ioqP+oqKj/qKio/6ioqP+lpaX/iYmJ/3p6ev97e3v/e3t7/3t7
        e/97e3v/e3t7/3t7e/97e3v/e3t7/3t7e/97e3v/WVlZ/0ZGRqVHR0cBR0dHAAAAAAAAAAAAR0dHAEdH
        RwFERESlbm5u/7e3t/+4uLj/uLi4/7i4uP+4uLj/uLi4/7i4uP+4uLj/uLi4/7i4uP+xsbH/k5OT/4OD
        g/+Dg4P/g4OD/4ODg/+Dg4P/g4OD/4ODg/+Dg4P/g4OD/4ODg/9cXFz/RUVFpUdHRwFHR0cAAAAAAAAA
        AABHR0cAR0dHAUVFRaVfX1//jY2N/46Ojv+NjY3/jY2N/46Ojv+NjY3/jY2N/42Njf+NjY3/jY2N/46O
        jv+Hh4f/cHBw/2xsbP9sbGz/bGxs/2xsbP9tbW3/bW1t/21tbf9tbW3/bW1t/1RUVP9GRkalR0dHAUdH
        RwAAAAAAAAAAAEdHRwBHR0cAR0dHgkdHR+NISEj1SEhI9UhISOBISEjrSkpK/1paWv9cXFz/XFxc/1xc
        XP9bW1v/V1dX/1hYWP9XV1f/V1dX/1dXV/9XV1f/VVVV/0lJSf9HR0frR0dH4EdHR/VHR0f1R0dH40dH
        R4JHR0cAR0dHAAAAAAAAAAAAR0dHAEdHRwBHR0cMR0dHIEdHR7NHR0ezR0dHHERERG5ZWVn+ycnJ/9zc
        3P/b29v/29vb/9nZ2f/Gxsb/vLy8/7y8vP+8vLz/vLy8/729vf+urq7/VVVV/kVFRW5HR0ccR0dHs0dH
        R7NHR0cgR0dHDEdHRwBHR0cAAAAAAAAAAAAAAAAAAAAAAEdHRwBHR0cBR0dHqEdHR6hHR0cAQ0NDWlxc
        XP7e3t7/9PT0//Pz8//z8/P/8/Pz/+/v7//a2tr/z8/P/8/Pz//Pz8//0NDQ/7+/v/9XV1f+REREWkdH
        RwBHR0eoR0dHqEdHRwFHR0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR0dHAEdHRwBHR0dZR0dHWUdH
        RwBFRUVbVFRU/qampv+0tLT/s7Oz/7Ozs/+zs7P/s7Oz/66urv+fn5//nJyc/5ycnP+dnZ3/kpKS/1FR
        Uf5FRUVbR0dHAEdHR1lHR0dZR0dHAEdHRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARkZGAEZG
        RgBGRkYAR0dHAEdHR0NHR0faSEhI4EhISOBISEjgSEhI4EhISOBISEjgSEhI4EhISOBISEjgSEhI4EhI
        SOBISEjgR0dH2kdHR0NHR0cARkZGAEZGRgBGRkYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABHR0cAR0dHBUdHRxtGRkYfRkZGH0ZGRh9GRkYfRkZGH0ZGRh9GRkYfRkZGH0ZG
        Rh9GRkYfRkZGH0ZGRh9HR0cbR0dHBUdHRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//w////8P////D////AP///wD///8A////AP//8AAP//AAD//wAA//8A
        AP/gAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfAAAADwAAAA8AAAAPgAAAH4AAAB/EA
        AI/5AACf/wAA//8AAP////////////////8=
</value>
  </data>
</root>